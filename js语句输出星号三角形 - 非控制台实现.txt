        /*  10行10星
        讲解：从第一个大循环开始， var i = 1; i <= 10；开始，1 < 10; 成立，所以执行花括号内的语句块
              花括号内的第一个语句块是第二个循环，var j=1; j<=10; 开始j=1 < 10； 成立，所以进入当前循环的花括号内语句块
              这时输出*星号，然后执行 j++循环操控块，执行到当这个循环结束时，即j = 11时，跳出当前花括号
              进入下一个语句（即大循环的花括号内容），就是输出一个换行，这就是第一次大循环。
              因为i的初始值是1，最终值是10，当i的值为11的时候就暂停了，所以一共有十次大循环，每一次大循环都会
              打印出10个星号和一个换行
        */
        for(var i = 1; i <= 10; i++){   // i 循环的输出结果是1到10
            for(var j=1; j<=10; j++){   // j 循环输出的结果是 1到 10
                document.write('*');    // 这里的意思就是i每循环一次，j循环10次
            }
                document.write('<br>');
        }
        document.write('<br>');



        /*
            左侧下方直角的三角形
        */
        for(var x = 1; x<=10 ; x++) {     // 保证有10个大循环
            for(var y = 1; y<=x; y++)   {   // 第一行一个，第二行两个... 其实就是第一个大循环输出一个，第二个大循环输出两个...
                document.write('*');
            }
                document.write('<br>');
        }
        document.write('<br>');





        /* 左侧上方直角的三角形
           对于内部小循环，首先要明白一点，就是每一行都会少一个所以是n--，而且初始第一行是10个星，所以，初始值是10 
           我们可以想到最后一行一定只有一个，所以就是当n和m相等时。
           第一行一定有10个，所以要进行10次循环。 m的初始值是1，n的初始值是10，所以只有当n大于m的时候，才能满足在n--的
           情况下进行循环，同时还要注意最后一行只有一个的情况，即m=n， 综合一下就是 n>=m
        */
        for(var m = 1; m <=10; m++){      // 还是一样，这里保证有10次大循环
            for(var n =10; n >= m; n--){
                document.write('*');
            }
            document.write('<br>');
        }
        document.write('<br>');





	/*
           右侧上方直角三角形（伪）, 思路是对的，但是最后显示的并不是右上角直角的三角形
            因为每个字符占得空间不一样大，把空格&nbsp换成*号就能发现最后是一个长为10个星
            宽为10行的图像，所以基本是对的

            思路很简单，右上角直角的三角形就是除了第一行以外都是以空格+星号的输出方式输出
            所以内部小循环除了有一个控制星号的以外，还得有一个控制空格数量的
       */
       for(var i = 1; i<=10; i++){            // 循环10次，就是10行了
           /*
                首先可以确定，空格一开始没有，最多出现9个，而且是一行的比一行多，所以三个条件可以确定两个半...
                所以初始值是0；循环操作是k++, 条件达成的最高值是i-1，但是当第一行输出的时候，不可以有空格，所以
                条件判断符号不可以有等号。 大循环初始值是1，控制空格的小循环是0，0 > 1的情况永远不可能出现，所以这里一定是小于号
           */
           for(var k = 0; k < i-1; k++){    // 这是控制空格数量的循环，先打印一行中的空格
                document.write('&nbsp');
           }
           for(var j = 10; j >= i; j--){   // 这是控制星号数量的循环， 再打印一行中的星号
               document.write('*');
           }
           document.write('<br>');          // 最后打印每行结束时的换行
       }
       
        document.write('<br>');






       /* 右侧下方直角的三角形（伪）*/
    for(var i = 1; i<=10; i++){

       for(var k = 9; k > i-1; k--){    // 这是控制空格数量的循环，先打印一行中的空格
           document.write('&nbsp');
       }
       for(var j = 1; j <= i; j++){   // 这是控制星号数量的循环， 再打印一行中的星号
           document.write('*');
       }
       document.write('<br>');          // 最后打印每行结束时的换行
    }


	

	/* 三角形正居中*/
        /*
            思路是除了第一行以外，其他每行中相邻两个星号之间添加一个空格
            每行左侧也需要添加空格，其实就是一个右下直角的三角形，然后每行每个星号之间加一个空格
        */
        for(var i = 1; i<=10; i++){

            for(var k = 9; k > i-1; k--){    // 这是控制空格数量的循环
                document.write('&nbsp');
            }
            for(var j = 1; j <= i; j++){        // 这是控制星号和星号之间空格数量的循环
                document.write('*' + '&nbsp');
            }
            document.write('<br>');          // 最后打印每行结束时的换行
        }


	
	
	/* 三角形倒居中*/
	//具体参照上面的....
        for(var i = 1; i<=10; i++) {
            for(var k = 0;  k<i-1; k++){
                document.write('&nbsp');
            }
            for(var j = 10; j>=i; j--){
                document.write('*' + '&nbsp');
            }
            document.write('<br>');
        }
	



	  /*
                菱形，其实就是在第五行以后，每一行又比之前一行少了而已
                所以，很简单，分为两种情况，当行数大于5和行数少于5的时候两种不同情况
            */
            for(var i = 1; i<=10; i++){
                if(i <= 5) {   // 当行数大于5的时候，和之前一样
                for(var k = 9; k > i-1; k--){    // 这是控制空格数量的循环

                    document.write('&nbsp');
                }
                for(var j = 1; j <= i; j++){        // 这是控制星号和星号之间空格数量的循环
                    document.write('*' + '&nbsp');
                }
                document.write('<br>');          // 最后打印每行结束时的换行
                }
                else{       // 当行数小于5的时候，就要换一下思路了, 要确保第六行有6个空格
                            // 而且控制空格的变量必须是自增，因为控制行数的变量是自增的。
                            // 同时要考虑星号的个数 第六行有4个星号
                    for(var k=1; k <=i; k++){    // 这是控制空格数量的循环

                        document.write('&nbsp');
                    }
                    for(var j = 9; j > i-1; j--){        // 这是控制星号和星号之间空格数量的循环
                        document.write('*' + '&nbsp');
                    }
                    document.write('<br>');          // 最后打印每行结束时的换行
                }

            }




	


